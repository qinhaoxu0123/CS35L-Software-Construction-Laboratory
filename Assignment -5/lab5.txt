{\rtf1\ansi\ansicpg1252\cocoartf1504
{\fonttbl\f0\fnil\fcharset134 PingFangSC-Regular;\f1\fnil\fcharset0 AndaleMono;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red255\green255\blue255;
\red47\green255\blue18;\red0\green0\blue0;}
{\*\expandedcolortbl;\csgray\c100000;\csgenericrgb\c0\c0\c0;\csgenericrgb\c100000\c100000\c100000;\csgray\c100000;
\cssrgb\c15686\c99608\c7843;\csgray\c0\c90000;}
\margl1440\margr1440\vieww10800\viewh13280\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Using \'a1\'aewget http://web.cs.ucla.edu/classes/fall16/cs35L/assign/coreutils-with-bug.tar.gz\'a1\'af to download the document\
unzipping the file uses \'a1\'aetar -xvzf coreutils-with-bug.tat.gz\'a1\'af and then cd  ~/coreutils-with-bug into the dir\
Run \'a1\'ae./configure\'a1\'af  and then \'a1\'aemake\'a1\'af we get the following texts:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1 \cf2 \cb3 \CocoaLigature0 In file included from utimecmp.c:41:0:\
utimens.h:2:5: error: conflicting types for 'futimens'\
 int futimens (int, char const *, struct timespec const [2]);\
     ^\
In file included from utimecmp.h:25:0,\
                 from utimecmp.c:25:\
/usr/include/sys/stat.h:373:12: note: previous declaration of 'futimens' was here\
 extern int futimens (int __fd, const struct timespec __times[2]) __THROW;\
            ^\
using \'91wget http://web.cs.ucla.edu/classes/fall16/cs35L/assign/coreutils.diff' to download the patch file \
and then using \'91patch -p0 < coreutils.diff\'92 to patch in the 
\f0 \cf0 \cb4 \CocoaLigature1 coreutils-with-bug \
after applying the patch file, there is none error when I run \'a1\'aemake\'a1\'af and \'a1\'aemake install\'a1\'af \
cd into the file src in the coreutil-with-bug and then follow the commands:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \expnd0\expndtw0\kerning0
$ tmp=$(mktemp -d)\
$ cd $tmp\
$ touch -d '1918-11-11 11:00 GMT' wwi-armistice\
$ touch now\
$ sleep 1\
$ touch now1\
$ ~/coreutils-with-bug/src/ls -lt --full-time wwi-armistice now now1\
we should be able to get the oldest file rank from the top to the bottom\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs24 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 [classqin@lnxsrv07 /tmp/tmp.ns2yeYhXlG]$ ~/coreutils-with-bug/src/ls -lt --full-time wwi-armistice now now1\
-rw-r--r-- 1 classqin class 0 1918-11-11 03:00:00.000000000 -0800 wwi-armistice\
-rw-r--r-- 1 classqin class 0 2016-10-26 22:48:38.239430594 -0700 now1\
-rw-r--r-- 1 classqin class 0 2016-10-26 22:48:28.807178703 -0700 now\cf5 \cb6 \

\f0 \cf0 \cb4 \CocoaLigature1 In order to fix the bug, we need to use the gdb debugger  by using \'a1\'afgdb ~/coreutils-with-bug/src/ls\'a1\'af\
At first we can use \'a1\'aeinfo functions\'a1\'af to see whats in our file, as I look through the functions, It would be reasonable to set the breakpoint on the function \'a1\'aebreak compare_mtime\'a1\'af because we are dealing with the bug that relates to time. \
At the breakpoint I see following result:\

\f1 \cf2 \cb3 \CocoaLigature0 Breakpoint 1, compare_mtime (a=0x617160, b=0x617210) at ls.c:2884\
2884	static int compare_mtime (V a, V b) \{ return cmp_mtime (a, b, xstrcoll); \}\
(gdb) s\
cmp_mtime (cmp=0x404350 <xstrcoll>, b=0x617210, a=0x617160) at ls.c:2884\
2884	static int compare_mtime (V a, V b) \{ return cmp_mtime (a, b, xstrcoll); \}\
(gdb) s\
timespec_cmp (b=..., a=...) at ../lib/timespec.h:48\
48	  int diff = a.tv_sec - b.tv_sec;\
(gdb) list\
43	/* Return negative, zero, positive if A < B, A == B, A > B, respectively.\
44	   Assume the nanosecond components are in range, or close to it.  */\
45	static inline int\
46	timespec_cmp (struct timespec a, struct timespec b)\
47	\{\
48	  int diff = a.tv_sec - b.tv_sec;\
49	  return diff ? diff : a.tv_nsec - b.tv_nsec;\
50	\}\
51	\
52	# if ! HAVE_DECL_NANOSLEEP\
(gdb) 
\f0 \cf0 \cb4 \CocoaLigature1 \

\f1 \cf2 \cb3 \CocoaLigature0 49	  return diff ? diff : a.tv_nsec - b.tv_nsec;\
(gdb) info locals\
diff = 1477731934\
(gdb) s\
as we do the step in, we get the very larger positive number which it may be a integer overflow. \
\
In order to fix the overflow problem:\
We need to create a new dir by using mkdir coreutils-new and then \'91touch timespec.h\'92 in the new dir we just created.\
After creating the new dir, we can use \'91cp coreutils-with-bug/lib/timespec.h coreutils-new/timespec.h\'92 and then modify the timespec.h by changing the function in line 48:\
timespec_cmp (struct timespec a , struct timespec b)\
\{\
return a.tv_sec > b.tv_sec ? 1 : (a.tv_sec < b.tv_sec ? \
								   -1 : a.tv_nsec - b.tv_nsec);\
\}\
then use \'93diff -u coreutils-with-bug/lib/timespec.h coreutils-new/timespec.h > lab5.diff\'94 to produce the lab5.diff\
After creating the lab5.diff\
we can put the lab5.diff in the coreutils-with-bug/lib and then patch to the timespec.h \
make\
Test:\
touch -d \'911918-11-11 11:00 GMT\'92 wwi-armistice \
touch now\
touch now1\
TZ=UTCO ls -lt \'97full-time www-armistice now now1\
we get:\
-rw-r--r-- 1 classqin class 0 2054-12-17 17:28:16.000000000 +0000 wwi-armistice\
-rw-r--r-- 1 classqin class 0 2016-10-29 10:10:54.656077000 +0000 now1\
-rw-r--r-- 1 classqin class 0 2016-10-29 10:10:50.815716000 +0000 now\

\f0 \cf0 \cb4 \CocoaLigature1 now we get the right result and 1918 is not recognized in the SEASnet server  and it perceive as the future time 2054\
it is because the local linux file system uses and the largest bit is a sign bit indicates whether the time is in the past or in the future.\
The seasnet uses 32 bit NFS system which cut off the first 32bit inclduing the sign bit ,thus we check things one the senate computer it will return a very future time.\
\

\f1 \cf2 \cb3 \CocoaLigature0 \
}